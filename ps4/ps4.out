\BOOKMARK [1][-]{section.1}{In class we discussed the idea of a closure as a function ...}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{What is the maximum number of copies that exist of the vector 1:10 during the first execution of myFun\(\)? Why?}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{Use serialize\(\) to generate a sequence of bytes that store ...}{section.1}% 3
\BOOKMARK [2][-]{subsection.1.3}{It seems unnecessary to have the "data <- input" line ...}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.4}{Can you figure out a way to make the code in part \(c\) work ...}{section.1}% 5
\BOOKMARK [1][-]{section.2}{This question explores memory use and copying with lists. In answering this question you can ignore what is happening with the list attributes, which are also reported by .Internal\(inspect\(\)\).}{}% 6
\BOOKMARK [2][-]{subsection.2.1}{Consider a list of vectors. Modify an element of one of the vectors. Can R make the change in place, without creating a new list or a new vector?}{section.2}% 7
\BOOKMARK [2][-]{subsection.2.2}{Next, make a copy of the list and determine ...?}{section.2}% 8
\BOOKMARK [2][-]{subsection.2.3}{Now make a list of lists ...}{section.2}% 9
\BOOKMARK [2][-]{subsection.2.4}{Run the following code in a new R session ...}{section.2}% 10
\BOOKMARK [1][-]{section.3}{Challenge 5 of Section 7.3 of Unit 4. The following is real code...}{}% 11
\BOOKMARK [1][-]{section.4}{}{}% 12
\BOOKMARK [2][-]{subsection.4.1}{This is a variation on Challenge 8 in Section 7.3 of Unit 4. The goal is to write a function to sample k values without replacement ...}{section.4}% 13
\BOOKMARK [2][-]{subsection.4.2}{Extra credit:}{section.4}% 14
