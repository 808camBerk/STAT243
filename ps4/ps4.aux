\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}In class we discussed the idea of a closure as a function ...}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}What is the maximum number of copies that exist of the vector 1:10 during the first execution of myFun()? Why?}{1}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Use serialize() to generate a sequence of bytes that store ...}{1}{subsection.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}It seems unnecessary to have the "data <- input" line ...}{2}{subsection.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Can you figure out a way to make the code in part (c) work ...}{2}{subsection.1.4}}
\@writefile{toc}{\contentsline {section}{\numberline {2}This question explores memory use and copying with lists. In answering this question you can ignore what is happening with the list attributes, which are also reported by .Internal(inspect()).}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Consider a list of vectors. Modify an element of one of the vectors. Can R make the change in place, without creating a new list or a new vector?}{3}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Next, make a copy of the list and determine ...?}{4}{subsection.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Now make a list of lists ...}{4}{subsection.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Run the following code in a new R session ...}{5}{subsection.2.4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Challenge 5 of Section 7.3 of Unit 4. The following is real code...}{6}{section.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}}{9}{section.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}This is a variation on Challenge 8 in Section 7.3 of Unit 4. The goal is to write a function to sample k values without replacement ...}{9}{subsection.4.1}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Average runtime for sampling functions}}{12}{table.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Extra credit:}{15}{subsection.4.2}}
