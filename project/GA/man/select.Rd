% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{select}
\alias{select}
\title{Variable selection using genetic algorithms}
\usage{
select(Y, X, family = "gaussian", objective_function = stats::AIC,
  crossover_parents_function = crossover_parents,
  crossover_method = c("method1", "method2", "method3"), pCrossover = 0.8,
  start_chrom = NULL, mutation_rate = NULL, converge = TRUE,
  tol = 1e-04, iter = 100, minimize = TRUE, parallel = FALSE)
}
\arguments{
\item{Y}{vector of response variable}

\item{X}{a matrix or dataframe of predictor variables}

\item{family}{a character string describing the error distribution and link function to be used in the model. Default is gaussian.}

\item{objective_function}{function for computing objective. Default is \code{\link{stats::AIC}}. User can specify custom function.}

\item{crossover_method}{a character string describing crossover method. Default is multi-point crossover.}

\item{pCrossover}{a numeric value for he probability of crossover for each mate pair.}

\item{start_chrom}{a numeric value for the  size of the popuation of chromosomes. Default is \code{choose(C, 2)} \eqn{\le 200}, where C is number of predictors.}

\item{mutation_rate}{a numeric value for rate of mutation. Default is \eqn{1 / (P \sqrt C)}, where P is number of chromosomes, and C is number of predictors.}

\item{converge}{a logical value indicating whether algorithm should attempt to converge or run for specified number of iterations. If \code{TRUE}, convergence will occur when highest ranked chromosomes is equal to mean of top 50\% in current and previous generation.}

\item{tol}{a numeric value indicating convergence tolerance. Default is 1e-4.}

\item{iter}{an integer specifying maximum number of generations algorithm will produce. Default is 100}

\item{minimize}{a logical value indicating whether optimize should be minimized (TRUE) or maximized (FALSE).}

\item{parallel}{a logical value indicating whether chromosmes should be evaluated using parallel processes. See \code{\link{evaluate_fitness}}.

If user wants to use custom objective_function, they must use a function that is compatible with \code{\link{lm}} or \code{\link{glm}} fitted objects which output a numberic value of length 1.}

\item{crossover_parents}{a function for crossover between mate pairs. User can specify custom function.}
}
\description{
select implements genetic algorithms for variable selection for GLMs by optimizing package or user specified objective functions such as AIC, BIC, and logloglikelihood.
Uses functions: \code{\link{generate_founders}}, \code{\link{evaluate_fitness}}, and \code{\link{create_next_generation}}.
Functions find optimal variables by using evolutationry biology concepts of natural selection, fitness, genetic crossover, and mutation. Founding generation of chromosomes is randomly generated and evaluated using an critieria such as AIC, BIC, or loglihood. Parents are selected by their fitness, and generate children chromosomes. As each generation breeds and produces new genreations, the algorithm moves towards the optimum.
}
\details{
1. Geof H. Givens, Jennifer A. Hoeting (2013) Combinatorial Optimization (italicize). Chapter 3 of Computational Statistics (italicize).
}
\examples{
# test
rm(list = ls())

set.seed(243)

# simulate data for gaussian GLM
library(simrel)
library(GA)

n <- 100 # number obs
p <- 25 # number predictors
m <- 2 # number relevant latent components
q <- 5 # number relevant predictors
gamma <- 0.2 # speed of decline in eigenvalues
R2 <- 0.5 # theoretical R-squared according to the true linear model
relpos <- sample(1:p, m, replace = F) # positions of m
dat <- simrel(n, p, m, q, relpos, gamma, R2) # generate data
x <- dat$X
y <- dat$Y

\dontrun{test_GA <- GA::select(Y, X, iter, family = "gaussian", crossover_method = "method1", pCrossover = 0.8, converge = TRUE, minimize = TRUE, parallel = FALSE)}

}
